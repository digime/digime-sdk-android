apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'
apply from: 'config/gradle/versioning.gradle'

publishing {

    publications {

        sdk(MavenPublication) {

            // Include components.
            if (components.hasWithName("java")) {
                from components.java
            } else if (components.hasWithName("android")) {
                from components.android
            }

            // Configure core metadata.
            groupId = 'me.digi'
            artifactId = 'sdk'
            version = android.defaultConfig.versionName

            // Configure extra POM metadata.
            pom {

                name = 'DigiMeSDK'
                description = 'digi.me Private Sharing SDK for Android'
                packaging = 'aar'

                licenses {

                    license {

                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

                    }

                }

                developers {

                    developer {
                        id = 'JacobKingDev'
                        name = 'Jacob King'
                        email = 'jacob@digi.me'
                    }

                }

                scm {

                    connection = 'scm:git:git://github.com/digime/digime-sdk-android.git'
                    developerConnection = 'scm:git:git://github.com/digime/digime-sdk-android.git'
                    url = 'https://github.com/digime/digime-sdk-android/'

                }

            }

        }

    }

    repositories {

        maven {

            name = 'DigiMeSnapshot'
            url = 'https://repository.sysdigi.net/m2/libs-snapshot-local/'

            credentials {
                username = 'USER-HERE'
                password = 'PASS-HERE'
            }

        }

        maven {

            name = 'DigiMeRelease'
            url = 'https://repository.sysdigi.net/m2/libs-release-local/'

            credentials {
                username = 'USER-HERE'
                password = 'PASS-HERE'
            }

        }

    }
}

signing {
    sign publishing.publications.sdk
}

tasks.register("artifactoryPublish", GradleBuild.class) {

    group = 'publishing'
    description = 'Prepares a clean release build and publishes to the appropriate repository.'

    def version = android.defaultConfig.versionName

    def publishTask

    if (version.endsWith('SNAPSHOT')) {
        // Deploy to snapshot repo.
        publishTask = 'publishAllPublicationsToDigiMeSnapshotRepository'
    }
    else {
        // Deploy to main repo.
        publishTask = 'publishAllPublicationsToDigiMeReleaseRepository'
    }

    tasks = ['clean', 'assembleRelease', 'sourcesJar', publishTask]
}